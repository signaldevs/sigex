# https://taskfile.dev

version: '3'

vars:
  SIGEX_VERSION: 1
  PKG_IDENTIFIER: com.signaladvisors.sigex

tasks:
  build:
    desc: build the go binary in dev mode and install
    sources:
      - ./**/*.go
    cmds:
      - go build -o bin/sigex
      - go install

  build-dist:
    desc: build binaries for distribution
    deps:
      - clean
      - build
    cmds:
      - task: build-os
        vars:
          GOOS: darwin
          GOARCH: amd64
      - task: build-os
        vars:
          GOOS: linux
          GOARCH: amd64
      - task: build-os
        vars:
          GOOS: windows
          GOARCH: amd64
          EXE: exe

  build-os: >
    GOOS={{.GOOS}}
    GOARCH={{.GOARCH}}
    go build -o bin/{{.GOOS}}-{{.GOARCH}}/sigex{{if .EXE}}.{{.EXE}}{{end}}

  package:
    desc: create an OSX package for installation
    deps:
      - build-dist
    cmds:
      - >
        pkgbuild
        --analyze
        --root bin/darwin-amd64
        bin/darwin-amd64/components.plist
      - >
        pkgbuild
        --identifier {{.PKG_IDENTIFIER}}
        --version {{.SIGEX_VERSION}}
        --root bin/darwin-amd64
        bin/darwin-amd64/sigex.pkg

  clean:
    desc: clean the build directory
    cmds:
      - rm -rf bin

  test:
    desc: run unit tests
    cmds:
      - go test -cover -v ./...

  example:
    desc: run the example node app
    cmds:
      - >
        sigex
        -f examples/node/config/.dev.env
        -f examples/node/.env
        -e CLI_VAR=SomeCLIVar
        node examples/node/app.js

  uninstall:
    desc: removes installed sigex package
    vars:
      SIGEX_INSTALL_PATH:
        sh: which sigex
    cmds:
      - rm {{.SIGEX_INSTALL_PATH}}
