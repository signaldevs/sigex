# https://taskfile.dev

version: '3'

vars:
  SIGEX_VERSION:
    sh: git describe --tags --abbrev=0

tasks:
  build:
    desc: build the go binary in dev mode and install
    sources:
      - ./**/*.go
    generates:
      - bin/sigex{{exeExt}}
    cmds:
      - echo "{{.SIGEX_VERSION}}"
      - >
        go build
        -ldflags "-X github.com/signaldevs/sigex/cmd.version={{.SIGEX_VERSION}}"
        -o bin/sigex
      - >
        go install
        -ldflags "-X github.com/signaldevs/sigex/cmd.version={{.SIGEX_VERSION}}"

  build-dist:
    desc: build binaries for distribution
    deps:
      - clean
      - build
    cmds:
      - task: build-os
        vars:
          GOOS: darwin
          GOARCH: amd64
      - task: build-os
        vars:
          GOOS: linux
          GOARCH: amd64
      - task: build-os
        vars:
          GOOS: windows
          GOARCH: amd64
          EXE: exe

  build-os: >
    GOOS={{.GOOS}}
    GOARCH={{.GOARCH}}
    go build 
    -ldflags "-X github.com/signaldevs/sigex/cmd.version={{.SIGEX_VERSION}}"
    -o bin/sigex-v{{.SIGEX_VERSION}}-{{.GOOS}}-{{.GOARCH}}/sigex{{if .EXE}}.{{.EXE}}{{end}}

  clean:
    desc: clean the build directory
    cmds:
      - rm -rf bin

  test:
    desc: run unit tests
    cmds:
      - go test -cover -v ./...

  example:
    desc: run the example node app
    cmds:
      - >
        sigex
        -f examples/node/config/.dev.env
        -f examples/node/.env
        -e CLI_VAR=SomeCLIVar
        node examples/node/app.js

  uninstall:
    desc: removes installed sigex package
    vars:
      SIGEX_INSTALL_PATH:
        sh: which sigex
    cmds:
      - rm {{.SIGEX_INSTALL_PATH}}
